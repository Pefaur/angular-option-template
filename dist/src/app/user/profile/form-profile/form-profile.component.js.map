{"version":3,"sources":["../../../../../../src/app/user/profile/form-profile/form-profile.component.ts"],"names":[],"mappings":"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","file":"form-profile.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OptFormComponent, OptUser, OptResponse, OptUserService } from '@option/core';\n\n// @Component({\n//   selector: 'opt-form-profile',\n//   templateUrl: './form-profile.component.html',\n//   styleUrls: ['./form-profile.component.scss']\n// })\nexport class OptFormProfileComponent extends OptFormComponent implements OnInit {\n  SERVER_MESSAGES: any = {\n    401: 'Invalid user or password.'\n  };\n\n  formErrors: any = {\n    firstName: '',\n    lastName: '',\n    email: ''\n  };\n\n  VALIDATION_MESSAGES: any = {\n    firstName: {\n      required: 'First name is required'\n    },\n    lastName: {\n      required: 'Last name is required'\n    },\n    email: {\n      required: 'Email is required',\n      email: 'Invalid email'\n    },\n    password: {\n      required: 'Password is required',\n      minlength: 'Password must be at least 8 characters long'\n    }\n  };\n\n  PLACEHOLDERS: any = {\n    firstName: 'First name',\n    lastName: 'Last name',\n    email: 'Email address',\n    password: 'Password'\n  };\n\n  LABELS: any = {\n    name: 'Name',\n    email: 'Email',\n    password: 'Password'\n  };\n\n  SUBMIT_LABEL = 'Update';\n\n  constructor(protected formBuilder: FormBuilder, protected userService: OptUserService, protected router: Router) {\n    super(formBuilder);\n    this.formBuilderGroupControlsConfig = {\n      firstName: [\n        null, [Validators.required]\n      ],\n      lastName: [\n        null, [Validators.required]\n      ],\n      email: [\n        null, [Validators.required, Validators.email]\n      ],\n      password: [\n        null, [Validators.required, Validators.minLength(8)]\n      ]\n    };\n  }\n\n  submit() {\n    const self = this;\n    const user = new OptUser();\n    user.setFullName(self.form.value.firstName, self.form.value.lastName);\n    user.username = self.form.value.email;\n    user.password = self.form.value.password;\n    user.email = self.form.value.email;\n    self.userService.update(user)\n      .then(function() {\n        self.router.navigate(['/']);\n      })\n      .catch(function(response: OptResponse) {\n        self.serverMessage.message = self.SERVER_MESSAGES[response.statusCode];\n        self.serverMessage.show = true;\n        self.serverMessage.isStatusOk = false;\n      });\n  }\n}\n"]}