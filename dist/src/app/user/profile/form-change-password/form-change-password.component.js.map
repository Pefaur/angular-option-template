{"version":3,"sources":["../../../../../../src/app/user/profile/form-change-password/form-change-password.component.ts"],"names":[],"mappings":"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","file":"form-change-password.component.js","sourceRoot":"","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OptFormComponent, OptPasswordValidation, OptResponse, OptUserService } from '@option/core';\nimport { ISubscription } from 'rxjs/Subscription';\n\n// @Component({\n//   selector: 'opt-form-change-password',\n//   templateUrl: './form-change-password.component.html',\n//   styleUrls: ['./form-change-password.component.scss']\n// })\nexport class OptFormChangePasswordComponent extends OptFormComponent implements OnInit, OnDestroy {\n\n  requestSubscribes: ISubscription[];\n\n  SERVER_MESSAGES: any = {\n    400: 'The actual password is incorrect.',\n    200: 'Your password was successfully changed.'\n  };\n\n  formErrors: any = {\n    actualPassword: '',\n    password: '',\n    repeatPassword: ''\n  };\n\n  VALIDATION_MESSAGES: any = {\n    actualPassword: {\n      required: 'Actual password is required'\n    },\n    password: {\n      required: 'Password is required',\n      minlength: 'Password must be at least 8 characters long'\n    },\n    repeatPassword: {\n      required: 'Repeat password is required',\n      MatchPassword: 'Passwords must be equal'\n    }\n  };\n\n  PLACEHOLDERS: any = {\n    actualPassword: 'Actual password',\n    password: 'Password',\n    repeatPassword: 'Re-enter password'\n  };\n\n  LABELS: any = {\n    actualPassword: 'Actual password',\n    password: 'Password',\n    repeatPassword: 'Re-enter Password'\n  };\n\n  SUBMIT_LABEL = 'Update';\n\n  constructor(protected formBuilder: FormBuilder, protected userService: OptUserService, protected router: Router) {\n    super(formBuilder);\n    this.formBuilderGroupControlsConfig = {\n      actualPassword: [\n        null, [Validators.required]\n      ],\n      password: [\n        null, [Validators.required, Validators.minLength(8)]\n      ],\n      repeatPassword: [\n        null, [Validators.required]\n      ]\n    };\n\n    this.formBuilderGroupExtra = {\n      validator: OptPasswordValidation.MatchPassword\n    };\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.requestSubscribes = [];\n  }\n\n  ngOnDestroy(): void {\n    // unsubscribe requests\n    this.requestSubscribes.map(requestSubscribe => {\n      requestSubscribe.unsubscribe();\n    });\n  }\n\n  submit() {\n    const actualPassword = this.form.value.actualPassword;\n    const password = this.form.value.password;\n    const repeatPassword = this.form.value.repeatPassword;\n    this.requestSubscribes.push(this.userService.changePassword(actualPassword, password, repeatPassword)\n      .subscribe(\n        (response: OptResponse) => {\n          this.setServerMessage(response.statusCode, true);\n        },\n        (response: OptResponse) => {\n          this.setServerMessage(response.statusCode);\n        }\n      )\n    );\n  }\n\n}\n"]}