{"version":3,"sources":["../../../../../../src/app/user/login/form-login/form-login.component.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAe,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAEzD,OAAO,EAAE,gBAAgB,EAA+B,MAAM,cAAc,CAAC;AAE7E,eAAe;AACf,gCAAgC;AAChC,gDAAgD;AAChD,+CAA+C;AAC/C,KAAK;AACL;IAA2C,yCAAgB;IA4BzD,+BAAsB,WAAwB,EACxB,WAA2B,EAC3B,MAAc;QAFpC,YAGE,kBAAM,WAAW,CAAC,SASnB;QAZqB,iBAAW,GAAX,WAAW,CAAa;QACxB,iBAAW,GAAX,WAAW,CAAgB;QAC3B,YAAM,GAAN,MAAM,CAAQ;QA7BpC,qBAAe,GAAQ;YACrB,GAAG,EAAE,2BAA2B;SACjC,CAAC;QAEF,gBAAU,GAAQ;YAChB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,yBAAmB,GAAQ;YACzB,KAAK,EAAE;gBACL,QAAQ,EAAE,mBAAmB;gBAC7B,KAAK,EAAE,eAAe;aACvB;YACD,QAAQ,EAAE;gBACR,QAAQ,EAAE,sBAAsB;gBAChC,SAAS,EAAE,6CAA6C;aACzD;SACF,CAAC;QAEF,kBAAY,GAAQ;YAClB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,UAAU;SACrB,CAAC;QAEF,kBAAY,GAAG,QAAQ,CAAC;QAMtB,KAAI,CAAC,8BAA8B,GAAG;YACpC,KAAK,EAAE;gBACL,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC;aAC9C;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACrD;SACF,CAAC;;IACJ,CAAC;IAED,sCAAM,GAAN;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACpE,IAAI,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,UAAS,QAAqB;YACnC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACvE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IACH,4BAAC;AAAD,CAtDA,AAsDC,CAtD0C,gBAAgB,GAsD1D","file":"form-login.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OptFormComponent, OptAuthService, OptResponse } from '@option/core';\n\n// @Component({\n//   selector: 'opt-form-login',\n//   templateUrl: './form-login.component.html',\n//   styleUrls: ['./form-login.component.scss']\n// })\nexport class OptFormLoginComponent extends OptFormComponent implements OnInit {\n  SERVER_MESSAGES: any = {\n    401: 'Invalid user or password.'\n  };\n\n  formErrors: any = {\n    email: '',\n    password: ''\n  };\n\n  VALIDATION_MESSAGES: any = {\n    email: {\n      required: 'Email is required',\n      email: 'Invalid email'\n    },\n    password: {\n      required: 'Password is required',\n      minlength: 'Password must be at least 8 characters long'\n    }\n  };\n\n  PLACEHOLDERS: any = {\n    email: 'Email',\n    password: 'Password'\n  };\n\n  SUBMIT_LABEL = 'Log in';\n\n  constructor(protected formBuilder: FormBuilder,\n              protected authService: OptAuthService,\n              protected router: Router) {\n    super(formBuilder);\n    this.formBuilderGroupControlsConfig = {\n      email: [\n        null, [Validators.required, Validators.email]\n      ],\n      password: [\n        null, [Validators.required, Validators.minLength(8)]\n      ]\n    };\n  }\n\n  submit() {\n    const self = this;\n    this.authService.login(self.form.value.email, self.form.value.password)\n      .then(function() {\n        self.router.navigate(['/']);\n      })\n      .catch(function(response: OptResponse) {\n        self.serverMessage.message = self.SERVER_MESSAGES[response.statusCode];\n        self.serverMessage.show = true;\n        self.serverMessage.isStatusOk = false;\n      });\n  }\n}\n"]}