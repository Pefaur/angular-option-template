{"version":3,"sources":["../../../../src/app/directives/slimscroll.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAsB,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC5E,OAAO,EAAE,oBAAA,EAAqB,MAAO,cAAA,CAAe;AAKpD;IAGE,8BAAoB,iBAAuC,EAAU,EAAc;QAA/D,sBAAiB,GAAjB,iBAAiB,CAAsB;QAAU,OAAE,GAAF,EAAE,CAAY;IACnF,CAAC;IAED,8CAAe,GAAf;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;aACtC,IAAI,CAAC,UAAA,IAAI;YACR,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;QACjD,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAkB,GAAlB,UAAmB,OAAY;QAC7B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;QAE9D,IAAM,eAAe,GAAG;YACtB,MAAM,EAAE,UAAU;YAClB,aAAa,EAAE,KAAK;YACpB,KAAK,EAAE,eAAe;SACvB,CAAC;QACF,EAAE,CAAC,CAAC,gEAAgE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/F,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACrC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACzC,CAAC;QACD,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,iBAAiB;iBAC5B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,oBAAoB,GAAG;QAC9B,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAH6F,CAG7F,CAAC;IACK,mCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC3B,CAAC;IACF,2BAAC;CAlDD,AAkDC,IAAA;SAlDY,oBAAoB","file":"slimscroll.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, AfterViewInit, ElementRef } from '@angular/core';\nimport { OptLazyScriptService } from '@option/core';\n\ndeclare let $: any;\n\n\nexport class SlimscrollrDirective implements AfterViewInit {\n   height: string;\n\n  constructor(private lazyScriptService: OptLazyScriptService, private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    const self = this;\n    self.lazyScriptService.load('slimscroll')\n      .then(data => {\n        self.generateSlimScroll(self.el.nativeElement);\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }\n\n  generateSlimScroll(element: any) {\n    if ($(element).attr('data-init')) {\n      return;\n    }\n    let dataHeight = this.height;\n    dataHeight = (!dataHeight) ? $(element).height() : dataHeight;\n\n    const scrollBarOption = {\n      height: dataHeight,\n      alwaysVisible: false,\n      color: 'rgba(0,0,0,0)'\n    };\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n      $(element).css('height', dataHeight);\n      $(element).css('overflow-x', 'scroll');\n    } else {\n      $(element).slimScroll(scrollBarOption);\n    }\n    $(element).attr('data-init', true);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[optSlimscroll]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OptLazyScriptService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'height': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}