{"version":3,"sources":["../../../../src/app/directives/date-picker.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA6B,UAAA,EAExD,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,oBAAA,EAAqB,MAAO,cAAA,CAAe;AAMpD;IAaE,6BAAoB,iBAAuC,EAAU,EAAc;QAA/D,sBAAiB,GAAjB,iBAAiB,CAAsB;QAAU,OAAE,GAAF,EAAE,CAAY;QARlF,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QACjD,kBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QACtD,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;IAOhD,CAAC;IAED,2DAA6B,GAA7B,UAA8B,WAAkB;QAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC;QAED,IAAM,iBAAiB,GAAQ,EAAE,CAAC;QAClC,IAAM,UAAU,GAAG,YAAY,CAAC;QAChC,gCAAgC;QAChC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,aAAa;YAC7C,iBAAiB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,aAAa,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;QACvF,IAAI,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;QAElG,IAAM,oBAAoB,GAAG,EAAE,CAAC;QAChC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;QAC7D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;QAEpD,oCAAoC;QACpC,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAM,cAAc,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QACzC,OAAO,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5D,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,CAAC;YACD,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAChC,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAW,GAAX,UAAY,OAAsB;QAChC,IAAM,cAAc,GAAiB,OAAO,CAAC,cAAc,CAAC;QAC5D,IAAM,WAAW,GAAiB,OAAO,CAAC,WAAW,CAAC;QACtD,IAAM,OAAO,GAAiB,OAAO,CAAC,OAAO,CAAC;QAC9C,EAAE,CAAC,CAAC,cAAc,IAAI,CAAC,cAAc,CAAC,aAAa,KAAK,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,CAAC;QACD,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,aAAa,KAAK,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5E,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC7C,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC;YACtG,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC;YAClG,EAAE,CAAC,CAAC,aAAa,KAAK,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC1D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,YAAY,CAAC;gBAC5C,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAED,sDAAwB,GAAxB;QAAA,iBAYC;QAXC,IAAM,kBAAkB,GAAG,CAAC,CAAC,MAAM;YACjC,uBAAuB;YACvB,+CAA+C;YAC/C,uBAAuB;YACvB,OAAO,CAAC,CAAC;QAEX,IAAM,eAAe,GAAG,CAAC,CAAC,sCAAsC,CAAC;aAC9D,KAAK,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;QAEtC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAA;IACxD,CAAC;IAED,+CAAiB,GAAjB;QACE,MAAM,CAAC;YACL,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE;gBACT,SAAS,EAAE,qDAAqD;gBAChE,UAAU,EAAE,sDAAsD;aACnE;YACD,YAAY,EAAE,EAAE;SACjB,CAAC;IACJ,CAAC;IAED,sCAAQ,GAAR;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACzB,IAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,UAAU,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,oCAAM,GAAN;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAW,GAAX,UAAY,QAAiB;QAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC;QACT,CAAC;QACD,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC7C,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAED,8CAAgB,GAAhB;QACE,wBAAwB;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,oCAAoC;YACpC,IAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;YAChE,IAAM,iBAAe,GAAG,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvD,IAAM,gBAAgB,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzD,IAAM,eAAe,GAAG,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1D,IAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;YACtD,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAEhD,EAAE,CAAC,CAAC,UAAU,KAAK,eAAe,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC;YACT,CAAC;YAED,IAAI,WAAW,GAAG,MAAM,CAAC;YACzB,EAAE,CAAC,CAAC,gBAAgB,KAAK,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpD,EAAE,CAAC,CAAC,gBAAgB,KAAK,aAAa,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5E,WAAW,IAAI,MAAM,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,KAAK,aAAa,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxF,WAAW,IAAI,MAAM,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnD,UAAU,CAAC,GAAG,CAAC,UAAC,GAAQ,EAAE,SAAc;gBACtC,IAAM,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,iBAAe,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxG,4BAA4B;oBAC5B,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,6CAAe,GAAf;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;aACtC,IAAI,CAAC,UAAA,IAAI;YACR,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,eAAe,CAAC;iBAC/C,IAAI,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;gBACzC,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3D,WAAW,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAO;oBAC5C,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3F,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC1B,+BAA+B;oBAC/B,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC9C,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,WAAW,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAO;oBAC7C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;gBAEH,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAO;oBACrE,IAAM,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;wBAC7C,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;oBACjD,IAAM,cAAc,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACtD,IAAM,eAAe,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACnB,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC3B,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;oBAC1C,CAAC;oBACD,IAAI,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;oBACxC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC7B,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;oBAClC,CAAC;oBACD,IAAM,UAAU,GAAG,YAAY,CAAC;oBAChC,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,GAAG,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;oBAC1F,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,IAAI,CAAC;oBAE/B,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3F,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC5B,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC9C,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,UAAU,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;gBAEnD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACvC,CAAC;gBACD,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAEnC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU;gBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YACpB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,iBAAiB;iBAC5B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,oBAAoB,GAAG;QAC9B,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAH6F,CAG7F,CAAC;IACK,kCAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;QACxD,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACpC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC/B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACpC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC5B,CAAC;IACF,0BAAC;CA9QD,AA8QC,IAAA;SA9QY,mBAAmB","file":"date-picker.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive, Input, Output, EventEmitter, AfterViewInit, ElementRef, SimpleChanges,\n  SimpleChange, OnChanges\n} from '@angular/core';\nimport { OptLazyScriptService } from '@option/core';\n\ndeclare let $: any;\ndeclare let moment: any;\n\n\nexport class DatePickerDirective implements AfterViewInit, OnChanges {\n   options: any;\n   isCollapsed: boolean;\n   setDate: Date;\n   availableDates: Date[];\n   onChange: EventEmitter<any> = new EventEmitter();\n   onChangeMonth: EventEmitter<any> = new EventEmitter();\n   onLoad: EventEmitter<any> = new EventEmitter();\n\n  $element: any;\n  actualDate: Date;\n  lastClickedDate: Date;\n\n  constructor(private lazyScriptService: OptLazyScriptService, private el: ElementRef) {\n  }\n\n  loadCurrentMonthDisabledDates(currentDate?: Date) {\n    if (!this.$element) {\n      return;\n    }\n    if (!this.availableDates || (this.availableDates && this.availableDates.length === 0)) {\n      return;\n    }\n\n    if (!this.actualDate && !currentDate) {\n      return;\n    }\n    let momCurrentDate = moment(this.actualDate);\n    if (currentDate) {\n      momCurrentDate = moment(currentDate);\n    }\n\n    const availableDatesMap: any = {};\n    const dateFormat = 'YYYY-MM-DD';\n    // available dates order by date\n    this.availableDates.map(function (dateAvailable) {\n      availableDatesMap[moment(dateAvailable).format(dateFormat)] = dateAvailable;\n    });\n\n    let startDate = moment(momCurrentDate.startOf('month').format(dateFormat), dateFormat);\n    let endDate = moment(momCurrentDate.endOf('month').add(1, 'days').format(dateFormat), dateFormat);\n\n    const additionalMonthDates = 20;\n    startDate = startDate.subtract(additionalMonthDates, 'days');\n    endDate = endDate.add(additionalMonthDates, 'days');\n\n    // disable not available month dates\n    const disabledDates = [];\n    const momentIterator = startDate.clone();\n    while (endDate.diff(momentIterator, 'days') > 0) {\n      if (!availableDatesMap[momentIterator.format('YYYY-MM-DD')]) {\n        disabledDates.push(momentIterator.toDate());\n      }\n      momentIterator.add(1, 'days');\n    }\n\n    this.$element.datepicker('setDatesDisabled', disabledDates);\n    this.$element.datepicker('setDate', this.actualDate);\n    this.renderActiveDate();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const availableDates: SimpleChange = changes.availableDates;\n    const isCollapsed: SimpleChange = changes.isCollapsed;\n    const setDate: SimpleChange = changes.setDate;\n    if (availableDates && (availableDates.previousValue !== availableDates.currentValue)) {\n      this.loadCurrentMonthDisabledDates(this.actualDate);\n    }\n    if (isCollapsed && (isCollapsed.previousValue !== isCollapsed.currentValue)) {\n      this.setCollapse(isCollapsed.currentValue);\n    }\n    if (setDate) {\n      const previousValue = setDate.previousValue ? setDate.previousValue.getTime() : setDate.previousValue;\n      const currentValue = setDate.currentValue ? setDate.currentValue.getTime() : setDate.currentValue;\n      if (previousValue !== currentValue && this.$element) {\n        this.$element.datepicker('setDate', setDate.currentValue);\n        this.lastClickedDate = setDate.currentValue;\n        this.loadCurrentMonthDisabledDates();\n      }\n    }\n  }\n\n  loadTemplateModification() {\n    const $collapseContainer = $('<tr>' +\n      '<td colspan=\"2\"></td>' +\n      '<td colspan=\"3\" class=\"collapse-button\"></td>' +\n      '<td colspan=\"2\"></td>' +\n      '</tr>');\n\n    const $collapseToggle = $('<a class=\"collapse-toggle link\"></a>')\n      .click(() => this.toggleCollapse());\n\n    $collapseContainer.find('.collapse-button').append($collapseToggle);\n    this.$element.find('tfoot').append($collapseContainer)\n  }\n\n  getDefaultOptions(): object {\n    return {\n      format: 'dd/mm/yyyy',\n      language: 'es',\n      templates: {\n        leftArrow: '<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>',\n        rightArrow: '<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>'\n      },\n      footTemplate: ''\n    };\n  }\n\n  collapse(): void {\n    const $tbody = this.$element.find('tbody');\n    const $activeDay = $tbody.find('.day.active');\n    $tbody.find('tr').hide();\n    const $activeRow = $activeDay.closest('tr');\n    $activeRow.show();\n  }\n\n  expand() {\n    const $tbody = this.$element.find('tbody');\n    $tbody.find('tr').show();\n  }\n\n  setCollapse(collapse: boolean) {\n    if (!this.$element) {\n      return;\n    }\n    collapse ? this.collapse() : this.expand();\n  }\n\n  toggleCollapse() {\n    console.log('toggle collapse');\n    this.isCollapsed = !this.isCollapsed;\n    this.setCollapse(this.isCollapsed);\n  }\n\n  renderActiveDate() {\n    // clear active elements\n    this.$element.find('.active').removeClass('active');\n\n    if (this.lastClickedDate) {\n      // add active to last clicked target\n      const momLastClickedDate = moment(this.lastClickedDate).clone();\n      const lastClickedDate = momLastClickedDate.format('D');\n      const lastClickedMonth = momLastClickedDate.format('MM');\n      const lastClickedYear = momLastClickedDate.format('YYYY');\n\n      const momActualDate = moment(this.actualDate).clone();\n      const actualYear = momActualDate.format('YYYY');\n\n      if (actualYear !== lastClickedYear) {\n        return;\n      }\n\n      let filterClass = '.day';\n      if (lastClickedMonth !== momActualDate.format('MM')) {\n        if (lastClickedMonth === momActualDate.clone().add(1, 'month').format('MM')) {\n          filterClass += '.new';\n        } else if (lastClickedMonth === momActualDate.clone().subtract(1, 'month').format('MM')) {\n          filterClass += '.old';\n        } else {\n          return;\n        }\n      }\n      const filterDays = this.$element.find(filterClass);\n      filterDays.map((key: any, filterDay: any) => {\n        const $filterDay = $(filterDay);\n        if ($filterDay.html() === lastClickedDate && !$filterDay.hasClass('old') && !$filterDay.hasClass('new')) {\n          // active to lastClickedDate\n          $filterDay.addClass('active');\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    const self = this;\n    if (!self.availableDates) {\n      self.availableDates = [];\n    }\n    self.lazyScriptService.load('datepicker')\n      .then(data => {\n        self.lazyScriptService.loadScript('datepicker-es')\n          .then(() => {\n            self.options = $.extend(self.getDefaultOptions(), self.options);\n            self.$element = $(self.el.nativeElement);\n            const $datepicker = self.$element.datepicker(self.options);\n            $datepicker.on('changeDate', function (ev: any) {\n              const hasDistintDates = self.actualDate && self.actualDate.getTime() !== ev.date.getTime();\n              self.actualDate = ev.date;\n              // self.onChange.emit(ev.date);\n              if (hasDistintDates) {\n                self.loadCurrentMonthDisabledDates(ev.date);\n              }\n            });\n            $datepicker.on('changeMonth', function (ev: any) {\n              self.actualDate = ev.date;\n              self.onChangeMonth.emit(ev.date);\n              self.loadCurrentMonthDisabledDates(ev.date);\n            });\n\n            $datepicker.find('.datepicker').on('click', 'td.day', function (ev: any) {\n              const $currentTarget = $(ev.currentTarget);\n              if ($currentTarget.hasClass('disabled-date')) {\n                return;\n              }\n\n              let actualDate = moment(self.actualDate).clone();\n              const isOldMonthDate = $currentTarget.hasClass('old');\n              const isNextMonthDate = $currentTarget.hasClass('new');\n              if (isOldMonthDate) {\n                actualDate = actualDate.subtract(1, 'month');\n              } else if (isNextMonthDate) {\n                actualDate = actualDate.add(1, 'month');\n              }\n              let currentDate = $currentTarget.html();\n              if (currentDate.length === 1) {\n                currentDate = '0' + currentDate;\n              }\n              const dateFormat = 'YYYY-MM-DD';\n              ev.date = moment(actualDate.format('YYYY-MM-[' + currentDate + ']'), dateFormat).toDate();\n              self.lastClickedDate = ev.date;\n\n              const hasDistintDates = self.actualDate && self.actualDate.getTime() !== ev.date.getTime();\n              self.actualDate = ev.date;\n              self.onChange.emit(ev.date);\n              if (hasDistintDates) {\n                self.loadCurrentMonthDisabledDates(ev.date);\n              }\n            });\n\n            self.actualDate = moment().startOf('day').toDate();\n\n            if (self.setDate) {\n              self.$element.datepicker('setDate', self.setDate);\n              self.lastClickedDate = self.setDate;\n            } else {\n              self.loadCurrentMonthDisabledDates();\n            }\n            self.loadCurrentMonthDisabledDates();\n            self.loadTemplateModification();\n            self.setCollapse(self.isCollapsed);\n\n            self.onLoad.emit();\n          })\n          .catch((error: any) => {\n            console.log(error)\n          });\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[optDatePicker]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OptLazyScriptService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input, args: ['optDatePicker', ] },],\n'isCollapsed': [{ type: Input },],\n'setDate': [{ type: Input },],\n'availableDates': [{ type: Input },],\n'onChange': [{ type: Output },],\n'onChangeMonth': [{ type: Output },],\n'onLoad': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}